name: Build Windows

on:
  push:
    branches-ignore:
      - 'coverityScan'
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    name: '${{ matrix.os }} (msvc)'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-2019
          - windows-2022
      fail-fast: false
    env:
      CC: cl.exe
      CXX: cl.exe
      LD: link.exe
    steps:
      - name: Runtime environment
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          echo "$HOME\\.local\\bin" >> $GITHUB_PATH
          echo "GITHUB_WORKSPACE=$(pwd)" >> $GITHUB_ENV
      - name: Setup compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64
      - name: Install OpenCppCoverage
        if: github.repository == 'dragonmux/rSON'
        uses: crazy-max/ghaction-chocolatey@v2.1.0
        with:
          args: install OpenCppCoverage
      - name: Setup OpenCppCoverage
        if: github.repository == 'dragonmux/rSON'
        run: |
          echo "C:/Program Files/OpenCppCoverage" >> $env:GITHUB_PATH
      - name: Setup Meson + Ninja
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install meson ninja
        working-directory: ${{ runner.temp }}
      - name: Version tools
        run: |
          cl /Bv
          link
          meson --version
          ninja --version
      - name: Checkout rSON
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: true
      - name: Configure
        run: meson build --prefix=$HOME/.local $BUILD_OPTS
      - name: Build
        run: meson compile -C build
      - name: Test
        run: meson test -C build
      - name: Run coverage build
        if: github.repository == 'dragonmux/rSON'
        run: |
          meson cov-build --prefix=$HOME/.local --buildtype=debug -Db_coverage=true
          meson compile -C cov-build
          meson test -C cov-build
      - name: Install
        run: meson install -C build
      - name: Upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.os }}-msvc
          path: |
            ${{ github.workspace }}/build/meson-logs/*
            ${{ github.workspace }}/cov-build/meson-logs/*
          retention-days: 5
      - name: Codecov
        if: success() && github.repository == 'dragonmux/rSON'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-mingw:
    name: '${{ matrix.os }} (${{ matrix.sys }})'
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        os:
          - windows-2019
          - windows-2022
        sys:
          - mingw64
          - ucrt64
          - clang64
      fail-fast: false
    steps:
      - name: Use MinGW from MSYS
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true
          path-type: inherit
          pacboy: >-
            toolchain:p
            lcov:p
            meson:p
            python-pip:p
            python-lxml:p
      - name: Runtime environment
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "GITHUB_WORKSPACE=`pwd`" >> $GITHUB_ENV
      - name: Setup compiler
        if: startsWith(matrix.sys, 'mingw') || startsWith(matrix.sys, 'ucrt64')
        run: |
          echo "GCOV=gcov" >> $GITHUB_ENV
      - name: Setup compiler
        if: startsWith(matrix.sys, 'clang')
        run: |
          echo "GCOV=llvm-cov gcov" >> $GITHUB_ENV
      - name: Setup gcovr
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install gcovr
        working-directory: ${{ runner.temp }}
      - name: Version tools
        run: |
          cc --version
          c++ --version
          $GCOV --version
          meson --version
          ninja --version
          gcovr --version
      - name: Checkout rSON
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: true
      - name: Configure
        run: meson setup build --prefix=$HOME/.local $BUILD_OPTS
      - name: Build
        run: meson compile -C build
      - name: Test
        run: meson test -C build
      - name: Run coverage build
        if: github.repository == 'dragonmux/rSON'
        # Codecov no longer parses gcov files automatically
        run: |
          meson setup cov-build --prefix=$HOME/.local --buildtype=debug -Db_coverage=true
          meson compile -C cov-build
          meson test -C cov-build
          ninja -C cov-build coverage-xml
      - name: Install
        run: meson install -C build
      - name: Upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.os }}-${{ matrix.sys }}
          path: |
            ${{ github.workspace }}/build/meson-logs/*
            ${{ github.workspace }}/cov-build/meson-logs/*
          retention-days: 5
      - name: Codecov
        if: success() && github.repository == 'dragonmux/rSON'
        uses: codecov/codecov-action@v3
        with:
          directory: ./cov-build/meson-logs
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
